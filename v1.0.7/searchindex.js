Search.setIndex({"docnames": ["index", "install", "pyapr", "pyapr.converter", "pyapr.data_containers", "pyapr.filter", "pyapr.io", "pyapr.measure", "pyapr.morphology", "pyapr.reconstruction", "pyapr.restoration", "pyapr.segmentation", "pyapr.transform", "pyapr.tree", "pyapr.utils", "pyapr.viewer"], "filenames": ["index.rst", "install.rst", "pyapr.rst", "pyapr.converter.rst", "pyapr.data_containers.rst", "pyapr.filter.rst", "pyapr.io.rst", "pyapr.measure.rst", "pyapr.morphology.rst", "pyapr.reconstruction.rst", "pyapr.restoration.rst", "pyapr.segmentation.rst", "pyapr.transform.rst", "pyapr.tree.rst", "pyapr.utils.rst", "pyapr.viewer.rst"], "titles": ["Documentation for pyapr", "Installation", "pyapr", "converter", "data_containers", "filter", "io", "measure", "morphology", "reconstruction", "restoration", "segmentation", "transform", "tree", "utils", "viewer"], "terms": {"content": [0, 2], "adapt": [0, 2, 3, 5, 10], "storag": [0, 2], "process": [0, 2, 3, 6], "volumetr": [0, 2, 7], "imag": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 15], "python": [0, 1, 2], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15], "collect": [0, 2], "tool": [0, 1, 2], "algorithm": [0, 2, 4, 11, 12], "convert": [0, 2, 5, 14], "from": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13], "particl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "represent": [0, 2], "apr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "well": [0, 2], "manipul": [0, 2], "view": [0, 2, 15], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "base": [0, 2, 4, 5, 6, 11, 14, 15], "namespac": [0, 2], "hold": [0, 2], "number": [0, 2, 3, 4, 10, 11], "data": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15], "contain": [0, 2, 3, 6, 7, 8, 9], "class": [0, 2, 3, 4, 6, 9, 14, 15], "see": [0, 1, 2, 11], "data_contain": [0, 2, 3, 6, 9, 15], "while": [0, 2, 11], "function": [0, 1, 2, 3, 4, 6, 10], "gener": [0, 2, 3, 5, 6, 7, 8, 10, 11, 13], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "import": [0, 2, 9], "via": [0, 2, 6, 10], "instal": 0, "cuda_en": [0, 2], "filter": [0, 2], "io": [0, 2, 9, 15], "measur": [0, 2], "morphologi": [0, 2], "reconstruct": [0, 2, 4, 5, 6, 10], "restor": [0, 2], "segment": [0, 2], "transform": [0, 2, 8], "tree": [0, 2, 4, 6, 9, 11], "util": [0, 2, 6], "viewer": [0, 2], "index": [0, 4, 9, 15], "modul": [0, 4], "search": 0, "page": 0, "For": [1, 8], "10": [1, 4, 9, 10], "version": 1, "3": [1, 3, 4, 5, 6, 7, 10, 11], "6": [1, 8], "9": [1, 5, 11], "direct": [1, 4, 11, 12], "should": [1, 5, 6, 10], "work": 1, "pyapr": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "we": 1, "recommend": 1, "us": [1, 2, 3, 4, 5, 6, 8, 9, 11, 15], "virtual": 1, "environ": 1, "below": [1, 4, 11], "cuda": [1, 2, 5, 10], "current": [1, 2, 3, 4, 6], "enabl": [1, 10], "when": [1, 6], "thi": [1, 4, 6, 9, 11, 15], "necessari": [1, 9], "packag": [1, 2, 5], "libapr": 1, "includ": 1, "submodul": 1, "built": [1, 2, 5, 10], "alongsid": 1, "wrapper": 1, "requir": [1, 5, 6, 9, 10, 11], "follow": [1, 8, 9], "hdf5": 1, "1": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 15], "8": 1, "20": 1, "higher": [1, 4], "0": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12], "libtiff": 1, "4": 1, "addition": 1, "list": [1, 5, 6, 15], "txt": 1, "On": 1, "ubuntu": 1, "essenti": 1, "libhdf5": 1, "dev": 1, "libtiff5": 1, "other": [1, 6], "distribut": 1, "refer": [1, 11], "document": 1, "name": [1, 4, 6, 9], "similar": 1, "provid": [1, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15], "gcc": 1, "compil": 1, "part": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "homebrew": 1, "have": [1, 5, 9], "xcode": 1, "command": 1, "line": 1, "If": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "you": 1, "want": 1, "also": 1, "llvm": 1, "can": [1, 9, 11], "done": 1, "clang": 1, "ship": 1, "appl": 1, "doe": [1, 5, 6], "pleas": 1, "latest": 1, "instruct": 1, "repositori": 1, "need": 1, "clone": 1, "recurs": 1, "git": 1, "http": [1, 11], "github": 1, "com": 1, "adaptiveparticl": 1, "It": 1, "virtualenv": 1, "To": [1, 5], "set": [1, 3, 4, 5, 6, 8, 11, 13, 15], "up": [1, 4], "e": [1, 2, 4, 5, 6, 7, 9, 10, 15], "g": [1, 2, 4, 5, 6, 7, 9, 10, 15], "pip3": 1, "python3": 1, "m": 1, "myenv": 1, "bin": 1, "activ": 1, "r": 1, "onc": 1, "setup": 1, "py": 1, "script": 1, "run": 1, "root": 1, "directori": [1, 4], "There": 1, "two": [1, 7], "given": [1, 4, 5, 6, 9], "disabl": 1, "descript": 1, "default": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "valu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "pyapr_use_openmp": 1, "multithread": 1, "ON": 1, "pyapr_use_cuda": 1, "avail": 1, "off": [1, 4], "pyapr_prefer_external_libapr": 1, "an": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15], "found": [1, 6], "rather": 1, "than": [1, 8, 11], "variabl": 1, "extra_cmake_arg": 1, "exampl": [1, 8, 9], "dpyapr_use_openmp": 1, "dpyapr_use_cuda": 1, "both": [1, 5, 11, 13], "non": [1, 7, 12], "standard": [1, 5, 6, 11], "locat": [1, 4, 5, 9], "help": 1, "find": [1, 3, 7, 15], "pass": 1, "dcmake_prefix_path": 1, "path": [1, 6, 9, 15], "addit": [1, 3, 6], "similarli": 1, "cmake_cxx_flag": 1, "cmake_cuda_flag": 1, "modifi": [1, 5, 8, 13], "call": [1, 15], "abov": 1, "cppflag": 1, "usr": 1, "local": [1, 4, 5, 11], "opt": 1, "ldflag": 1, "l": 1, "lib": 1, "wl": 1, "rpath": 1, "cxx": 1, "cc": 1, "convers": [2, 3], "pixel": [2, 3, 4, 5, 9, 10], "spatial": [2, 5], "convolut": [2, 5], "read": [2, 4, 6, 9], "write": [2, 6, 9, 15], "object": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15], "properti": [2, 3, 4, 9], "mainli": 2, "label": [2, 7, 8], "morpholog": [2, 8], "oper": [2, 5, 8, 11], "dilat": [2, 8], "eros": [2, 8], "remov": [2, 8], "small": [2, 8, 9], "hole": [2, 8], "all": [2, 4, 6, 12, 13], "volum": [2, 7, 8, 9, 12, 15], "differ": [2, 5, 11, 12], "resolut": [2, 4, 5, 6, 9, 10, 11, 13, 15], "onli": [2, 4, 8, 9, 11, 12], "deconvolut": [2, 10], "graphcut": [2, 11], "maximum": [2, 4, 5, 12, 13, 15], "project": [2, 12, 15], "comput": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13], "interior": [2, 4, 8, 9], "mani": 2, "multi": 2, "handl": 2, "file": [2, 4, 6, 9], "type": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "visual": [2, 3], "method": [2, 5, 6, 12], "slice": [2, 3, 5, 9, 11, 15], "raycast": 2, "render": 2, "bool": [2, 3, 4, 5, 6, 8, 10, 11, 13, 15], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "true": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15], "wa": [2, 8], "support": [2, 5, 10, 12], "fals": [2, 3, 4, 5, 6, 8, 10, 11, 13, 15], "otherwis": [2, 3, 5, 6, 8, 10, 11, 12], "get_apr": 3, "ndarrai": [3, 4, 5, 7, 9, 10, 12, 15], "byteconvert": 3, "shortconvert": 3, "floatconvert": 3, "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "param": 3, "aprparamet": [3, 4], "verbos": [3, 15], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "numpi": [3, 4, 7, 9, 12, 14, 15], "input": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "arrai": [3, 4, 7, 9], "dimens": [3, 4, 5, 8, 9, 11, 12, 15], "option": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "By": 3, "avoid": 3, "round": 3, "error": [3, 4], "intern": [3, 4, 7, 8], "step": [3, 4], "auto_paramet": [3, 4], "mode": [3, 9, 15], "sampl": [3, 4, 5, 13], "structur": [3, 5, 6, 7, 8, 9, 11, 12, 13, 15], "byteparticl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "shortparticl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "floatparticl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "averag": [3, 5, 9, 13], "downsampl": [3, 5, 9, 13], "match": [3, 6, 8], "uint8": [3, 4, 14], "uint16": [3, 4, 6, 14, 15], "float": [3, 4, 5, 6, 10, 11, 14, 15], "get_apr_interact": 3, "slider_decim": [3, 14], "int": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15], "interact": [3, 15], "ip_th": [3, 4], "sigma_th": [3, 4], "grad_th": [3, 4], "feedback": 3, "decim": 3, "slider": [3, 15], "find_parameters_interact": [3, 14], "select": 3, "threshold": [3, 4, 8, 11], "arg": [3, 4, 6], "kwarg": [3, 4, 6], "overload": [3, 4, 6], "self": [3, 4, 6, 15], "_pyaprwrapp": [3, 4, 6, 9, 15], "img": [3, 4, 14], "float32": [3, 4, 5, 10], "get_apr_step1": 3, "get_apr_step2": 3, "arg0": [3, 4, 15], "arg1": [3, 15], "get_level_slic": 3, "arg2": [3, 15], "arg3": [3, 15], "get": [3, 6], "level": [3, 4, 5, 9, 10, 11, 13], "appli": [3, 5, 7, 8, 10, 11], "get_paramet": [3, 4], "set_paramet": 3, "byteconverterbatch": 3, "print": 3, "time": [3, 6, 8, 9], "inform": [3, 11], "z_block_siz": [3, 11], "z": [3, 4, 5, 7, 8, 9, 11, 12, 15], "simultan": 3, "z_ghost_siz": [3, 11], "ghost": 3, "each": [3, 5, 7, 8, 9, 10, 11, 13], "side": [3, 7, 8, 11], "block": [3, 4, 11], "shortconverterbatch": 3, "floatconverterbatch": 3, "These": 4, "top": [4, 8], "access": [4, 6], "reconpatch": [4, 9, 12], "pybind11_object": [4, 15], "computational_ratio": 4, "ratio": 4, "origin": [4, 9], "creat": [4, 6], "iter": [4, 8, 9, 10, 11], "lineariter": 4, "linear": [4, 6], "level_max": [4, 13], "level_min": 4, "minimum": [4, 5, 11], "org_dim": 4, "dim": [4, 5, 12], "size": [4, 5, 6, 8, 9, 11, 15], "specifi": [4, 5, 9, 12, 14, 15], "y": [4, 5, 7, 8, 12, 15], "x": [4, 5, 7, 8, 12, 15], "shape": [4, 5, 7, 9, 10], "tupl": [4, 5, 6, 7, 11, 15], "total_number_particl": 4, "total_number_tree_particl": 4, "tree_iter": 4, "aprtre": 4, "x_num": 4, "give": [4, 5], "bound": [4, 7], "y_num": 4, "z_num": 4, "region": [4, 9, 11, 12, 15], "intens": [4, 7, 9, 10, 11, 12, 15], "ignor": 4, "cross": [4, 5], "entropi": 4, "li": 4, "": 4, "background_intensity_estim": 4, "dx": 4, "voxel": [4, 5, 7, 8], "dy": 4, "2": [4, 5, 10, 11, 12, 14], "dz": 4, "gradient": [4, 5, 11], "gradient_smooth": 4, "degre": 4, "smooth": [4, 9, 11], "b": 4, "spline": 4, "fit": 4, "more": [4, 6], "input_dir": 4, "input_image_nam": 4, "mask_fil": 4, "neighborhood_optim": 4, "noise_sd_estim": 4, "output_dir": 4, "output": [4, 5, 7, 8, 9, 10, 11, 13, 14], "intermedi": 4, "output_step": 4, "save": [4, 6, 15], "tiff": 4, "psfx": 4, "affect": [4, 6], "scale": [4, 5, 11], "window": [4, 11, 15], "psfy": 4, "psfz": 4, "rel_error": 4, "rel": 4, "condit": 4, "clamp": 4, "sigma_th_max": 4, "byteparticles_cpp": [4, 6], "copi": [4, 8], "partstocopi": 4, "particledata": [4, 6, 8, 14, 15], "unsign": 4, "short": 4, "long": 4, "longparticl": [4, 5, 6, 7, 8, 9, 12, 13, 14, 15], "numblock": 4, "partial": 4, "certain": 4, "fill": 4, "element": 4, "fill_with_level": 4, "max": [4, 7, 8, 11, 13], "min": [4, 5, 8, 11, 13], "resiz": 4, "sample_imag": 4, "uint64": [4, 7, 14], "sample_image_block": 4, "filenam": 4, "str": [4, 5, 6, 9, 12, 14, 15], "blocksiz": 4, "ghostsiz": 4, "reduc": [4, 11], "memori": [4, 6, 9, 11], "usag": 4, "set_background": 4, "lossi": 4, "background": [4, 7, 8, 11, 15], "cut": [4, 11], "set_compression_typ": 4, "turn": 4, "compress": [4, 15], "set_quantization_factor": 4, "quantiz": [4, 15], "factor": [4, 11], "shortparticles_cpp": [4, 6], "floatparticles_cpp": [4, 6], "intparticl": [4, 9], "intparticles_cpp": 4, "longparticles_cpp": [4, 6], "check_limit": 4, "lazyaccess": 4, "level_delta": [4, 9], "patch": [4, 9, 12], "x_begin": 4, "x_end": 4, "y_begin": 4, "y_end": 4, "z_begin": 4, "z_end": 4, "begin": 4, "first": 4, "spars": [4, 6], "row": 4, "end": 4, "exclus": 4, "open": [4, 6, 8, 9], "find_coordin": 4, "idx": 4, "find_particl": 4, "correspond": [4, 6, 7, 9, 14], "coordin": [4, 7], "close": [4, 6, 8], "init": 4, "aprfil": [4, 6], "initi": [4, 9, 10, 11], "init_tre": 4, "lazyiter": [4, 9], "lazydatabyt": [4, 9, 14], "dataset": [4, 6], "dataset_s": 4, "particles_nam": [4, 6], "t": [4, 6, 9], "channel_nam": [4, 6, 9], "lazydatashort": [4, 9, 14], "lazydatafloat": [4, 9, 14], "lazydatalong": [4, 9, 14], "convolv": 5, "stencil": 5, "restrict_stencil": 5, "rescale_stencil": 5, "normalize_stencil": 5, "reflect_boundari": 5, "pencil": 5, "between": [5, 11], "interpol": [5, 9], "neighbor": [5, 7, 8, 11], "target": 5, "np": [5, 10], "kernel": 5, "dimension": [5, 10], "expand": [5, 10], "which": [5, 6, 10, 11, 12], "result": [5, 6, 9, 10, 11, 12, 15], "written": [5, 6, 10, 11], "new": [5, 6, 8, 10, 11, 13], "coarser": [5, 10], "consist": [5, 8, 10], "rescal": 5, "weight": [5, 7, 10], "accord": [5, 9, 15], "distanc": 5, "finit": 5, "calcul": 5, "normal": [5, 7, 10], "sum": [5, 10], "reflect": 5, "boundari": [5, 11], "zero": [5, 7, 8], "pad": [5, 11], "construct": [5, 9, 11], "isotrop": 5, "neighborhood": 5, "buffer": 5, "gpu": [5, 10], "5": [5, 10], "mai": [5, 12], "perform": [5, 11, 12], "depend": [5, 11], "produc": [5, 12], "same": [5, 8, 13], "correl": 5, "delta": 5, "central": 5, "account": 5, "vari": 5, "across": 5, "domain": 5, "axi": [5, 12], "along": [5, 12], "interest": 5, "sobel": 5, "gradient_magnitud": 5, "magnitud": [5, 11], "length": 5, "sobel_magnitud": 5, "std": 5, "deviat": [5, 11], "around": 5, "box": [5, 7], "singl": 5, "integ": 5, "consid": [5, 7, 8, 11], "median_filt": 5, "median": 5, "At": 5, "coars": [5, 6], "finer": 5, "allow": [5, 6, 9], "7": [5, 11], "11": 5, "min_filt": 5, "max_filt": 5, "get_gaussian_stencil": 5, "sigma": [5, 11], "ndim": [5, 9], "naiv": 5, "gaussian": 5, "fpath": 6, "parts_nam": [6, 9], "one": [6, 8], "home": [6, 9], "test": [6, 9], "must": [6, 9, 10, 13], "correct": [6, 9], "datatyp": 6, "point": [6, 9, 10], "channel": [6, 9], "field": [6, 9], "read_apr": 6, "read_particl": 6, "get_particle_nam": 6, "write_linear": 6, "write_tre": [6, 9], "tree_part": [6, 9, 13], "under": 6, "random": 6, "most": 6, "parent": [6, 13], "node": [6, 13], "slightli": 6, "larger": [6, 8], "roughli": 6, "14": 6, "3d": [6, 8, 9, 15], "typic": 6, "subsequ": [6, 15], "fill_tree_mean": [6, 9, 13], "lazi": [6, 9], "lazyslic": [6, 9], "write_apr": 6, "write_particl": 6, "append": 6, "exist": 6, "leav": 6, "intact": 6, "possibli": 6, "overwrit": 6, "alreadi": 6, "altern": 6, "equival": 6, "present": [6, 9], "check": [6, 8], "A": 6, "detect": 6, "empti": 6, "get_particle_typ": 6, "string": [6, 14], "whose": 6, "determin": 6, "dtype": [6, 14], "describ": 6, "type_to_particl": [6, 14], "type_to_lazy_particl": [6, 14], "aprfile_cpp": 6, "current_file_size_gb": 6, "gb": 6, "current_file_size_mb": 6, "mb": 6, "get_channel_nam": 6, "apr_or_tre": 6, "get_particles_nam": 6, "store": 6, "file_nam": 6, "read_writ": 6, "set_write_linear_flag": 6, "flag": 6, "connected_compon": 7, "mask": [7, 8, 11], "connect": [7, 8], "compon": [7, 8], "thei": [7, 9], "face": [7, 8, 11], "take": [7, 9, 13], "binari": [7, 8, 11], "find_object": 7, "tight": 7, "uniqu": 7, "assum": [7, 8, 12], "order": [7, 9], "min_coord": 7, "lower": [7, 9, 11], "corner": 7, "max_coord": 7, "upper": 7, "find_label_cent": 7, "center": [7, 15], "coord": 7, "find_label_volum": 7, "radiu": 8, "inplac": 8, "grayscal": 8, "repeat": 8, "parts_copi": 8, "tophat": 8, "hat": 8, "subtract": 8, "out": [8, 12], "numer": 8, "bottomhat": 8, "bottom": 8, "itself": 8, "find_perimet": 8, "retain": 8, "least": 8, "remain": 8, "perimet": 8, "do": 8, "remove_small_object": 8, "min_volum": 8, "smaller": 8, "note": [8, 11, 12, 15], "alloc": [8, 11], "vector": 8, "larg": 8, "relabel": 8, "consecut": 8, "place": [8, 13], "labels_copi": 8, "remove_small_hol": 8, "background_label": 8, "recomput": 8, "remove_edge_object": 8, "z_edg": 8, "x_edg": 8, "y_edg": 8, "intersect": 8, "edg": [8, 11], "remove_large_object": 8, "max_volum": 8, "reconstruct_const": 9, "out_arr": 9, "piecewis": 9, "constant": [9, 11], "full": 9, "prealloc": 9, "limit": 9, "realloc": [9, 11], "reconstruct_level": 9, "reconstruct_smooth": 9, "aprslic": 9, "tree_mod": 9, "mean": 9, "helper": 9, "rang": [9, 15], "fly": 9, "slicer": 9, "15": 9, "42": 9, "45": 9, "57": 9, "60": 9, "astyp": 9, "typespec": [9, 14], "new_empty_slic": 9, "update_dim": 9, "set_level_delta": [9, 15], "file_path": 9, "tree_parts_nam": 9, "lazili": 9, "achiev": 9, "file_without_tre": 9, "file_with_tre": 9, "transpos": 9, "reconstruct_lazi": 9, "directli": 9, "entir": [9, 12, 15], "reconstruct_constant_lazi": 9, "apr_it": 9, "tree_it": 9, "lazydata": [9, 14], "reconstruct_level_lazi": 9, "reconstruct_smooth_lazi": 9, "richardson_luci": 10, "psf": 10, "num_it": 10, "restrict_psf": 10, "normalize_psf": 10, "resum": 10, "richardson": 10, "luci": 10, "spread": 10, "cast": 10, "forward": 10, "blur": 10, "previou": 10, "estim": [10, 11], "argument": [10, 12], "richardson_lucy_tv": 10, "reg_param": 10, "01": 10, "total": 10, "variat": 10, "regular": 10, "control": [10, 11], "tv": 10, "term": 10, "1e": 10, "richardson_lucy_cuda": 10, "alpha": 11, "beta": 11, "gamma": 11, "constant_neighbor_scal": 11, "z_anisotropi": 11, "intensity_threshold": 11, "min_std": 11, "std_window_s": 11, "num_level": [11, 13], "max_factor": 11, "avg_num_neighbor": 11, "num_tree_smooth": 11, "num_part_smooth": 11, "push_depth": 11, "16": 11, "graph": 11, "flow": 11, "implement": 11, "maxflow": 11, "v3": 11, "04": 11, "form": 11, "link": 11, "its": [11, 13], "neighbour": 11, "termin": 11, "cost": 11, "procedur": 11, "highli": 11, "experiment": 11, "like": 11, "improv": 11, "exp": 11, "di": 11, "where": 11, "absolut": 11, "flat": 11, "energi": 11, "sole": 11, "finest": [11, 13, 15], "brighter": 11, "foreground": 11, "amount": 11, "being": 11, "increas": 11, "coarsen": [11, 13], "wise": 11, "overlap": 11, "artifact": 11, "yuri": 11, "boykov": 11, "vladimir": 11, "kolmogorov": 11, "comparison": 11, "minim": 11, "vision": 11, "ieee": 11, "transact": 11, "pattern": 11, "analysi": 11, "machin": 11, "intellig": 11, "26": 11, "2004": 11, "1124": 11, "1137": 11, "pub": 11, "ist": 11, "ac": 11, "vnk": 11, "softwar": 11, "html": 11, "compute_terminal_cost": 11, "debug": 11, "tune": 11, "maximum_project": 12, "auto": 12, "neg": 12, "zx": 12, "plane": 12, "zy": 12, "xy": 12, "within": 12, "through": 12, "ident": 12, "pyramid": 12, "either": 13, "fill_tree_max": 13, "fill_tree_min": 13, "sample_from_tre": 13, "in_plac": 13, "further": 13, "prior": 13, "re": 13, "thu": 13, "resampl": 13, "particles_to_typ": 14, "valid": 14, "interactiveio": 14, "static": 14, "get_tiff_file_nam": 14, "get_apr_file_nam": 14, "save_apr_file_nam": 14, "default_nam": 14, "save_tiff_file_nam": 14, "tif": 14, "interactive_apr": 14, "parts_view": 15, "spawn": 15, "2d": 15, "raycast_view": 15, "scroll": 15, "zoom": 15, "click": 15, "drag": 15, "chang": 15, "interactive_compress": 15, "slide": 15, "behavior": 15, "o": 15, "particle_scatter_plot": 15, "base_markers": 15, "markersize_scale_factor": 15, "save_path": 15, "figsiz": 15, "ani": 15, "dpi": 15, "100": 15, "xrang": 15, "yrang": 15, "displai": 15, "cmap": 15, "viridi": 15, "plot": 15, "sub": 15, "dot": 15, "color": 15, "matplotlib": 15, "taken": 15, "marker": 15, "grow": 15, "exponenti": 15, "particle_side_length": 15, "figur": 15, "specif": 15, "per": 15, "inch": 15, "pyplot": 15, "show": 15, "map": 15, "aprraycast": 15, "get_radiu": 15, "demo": 15, "get_view": 15, "increment_angl": 15, "increment_phi": 15, "set_angl": 15, "set_phi": 15, "set_radiu": 15, "set_verbos": 15, "timer": 15, "set_z_anisotropi": 15}, "objects": {"": [[2, 0, 0, "-", "pyapr"]], "pyapr": [[3, 0, 0, "-", "converter"], [2, 4, 1, "", "cuda_enabled"], [4, 0, 0, "-", "data_containers"], [5, 0, 0, "-", "filter"], [6, 0, 0, "-", "io"], [7, 0, 0, "-", "measure"], [8, 0, 0, "-", "morphology"], [9, 0, 0, "-", "reconstruction"], [10, 0, 0, "-", "restoration"], [11, 0, 0, "-", "segmentation"], [12, 0, 0, "-", "transform"], [13, 0, 0, "-", "tree"], [14, 0, 0, "-", "utils"], [15, 0, 0, "-", "viewer"]], "pyapr.converter": [[3, 1, 1, "", "ByteConverter"], [3, 1, 1, "", "ByteConverterBatch"], [3, 1, 1, "", "FloatConverter"], [3, 1, 1, "", "FloatConverterBatch"], [3, 1, 1, "", "ShortConverter"], [3, 1, 1, "", "ShortConverterBatch"], [3, 4, 1, "", "find_parameters_interactive"], [3, 4, 1, "", "get_apr"], [3, 4, 1, "", "get_apr_interactive"]], "pyapr.converter.ByteConverter": [[3, 2, 1, "", "get_apr"], [3, 2, 1, "", "get_apr_step1"], [3, 2, 1, "", "get_apr_step2"], [3, 2, 1, "", "get_level_slice"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "set_parameters"], [3, 3, 1, "", "verbose"]], "pyapr.converter.ByteConverterBatch": [[3, 2, 1, "", "get_apr"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "set_parameters"], [3, 3, 1, "", "verbose"], [3, 3, 1, "", "z_block_size"], [3, 3, 1, "", "z_ghost_size"]], "pyapr.converter.FloatConverter": [[3, 2, 1, "", "get_apr"], [3, 2, 1, "", "get_apr_step1"], [3, 2, 1, "", "get_apr_step2"], [3, 2, 1, "", "get_level_slice"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "set_parameters"], [3, 3, 1, "", "verbose"]], "pyapr.converter.FloatConverterBatch": [[3, 2, 1, "", "get_apr"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "set_parameters"], [3, 3, 1, "", "verbose"], [3, 3, 1, "", "z_block_size"], [3, 3, 1, "", "z_ghost_size"]], "pyapr.converter.ShortConverter": [[3, 2, 1, "", "get_apr"], [3, 2, 1, "", "get_apr_step1"], [3, 2, 1, "", "get_apr_step2"], [3, 2, 1, "", "get_level_slice"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "set_parameters"], [3, 3, 1, "", "verbose"]], "pyapr.converter.ShortConverterBatch": [[3, 2, 1, "", "get_apr"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "set_parameters"], [3, 3, 1, "", "verbose"], [3, 3, 1, "", "z_block_size"], [3, 3, 1, "", "z_ghost_size"]], "pyapr.data_containers": [[4, 1, 1, "", "APR"], [4, 1, 1, "", "APRParameters"], [4, 1, 1, "", "ByteParticles"], [4, 1, 1, "", "FloatParticles"], [4, 1, 1, "", "IntParticles"], [4, 1, 1, "", "LazyAccess"], [4, 1, 1, "", "LazyDataByte"], [4, 1, 1, "", "LazyDataFloat"], [4, 1, 1, "", "LazyDataLong"], [4, 1, 1, "", "LazyDataShort"], [4, 1, 1, "", "LazyIterator"], [4, 1, 1, "", "LinearIterator"], [4, 1, 1, "", "LongParticles"], [4, 1, 1, "", "ReconPatch"], [4, 1, 1, "", "ShortParticles"]], "pyapr.data_containers.APR": [[4, 2, 1, "", "computational_ratio"], [4, 2, 1, "", "get_parameters"], [4, 2, 1, "", "iterator"], [4, 2, 1, "", "level_max"], [4, 2, 1, "", "level_min"], [4, 3, 1, "", "name"], [4, 2, 1, "", "org_dims"], [4, 2, 1, "", "shape"], [4, 2, 1, "", "total_number_particles"], [4, 2, 1, "", "total_number_tree_particles"], [4, 2, 1, "", "tree_iterator"], [4, 2, 1, "", "x_num"], [4, 2, 1, "", "y_num"], [4, 2, 1, "", "z_num"]], "pyapr.data_containers.APRParameters": [[4, 3, 1, "", "Ip_th"], [4, 3, 1, "", "auto_parameters"], [4, 3, 1, "", "background_intensity_estimate"], [4, 3, 1, "", "dx"], [4, 3, 1, "", "dy"], [4, 3, 1, "", "dz"], [4, 3, 1, "", "grad_th"], [4, 3, 1, "", "gradient_smoothing"], [4, 3, 1, "", "input_dir"], [4, 3, 1, "", "input_image_name"], [4, 3, 1, "", "mask_file"], [4, 3, 1, "", "name"], [4, 3, 1, "", "neighborhood_optimization"], [4, 3, 1, "", "noise_sd_estimate"], [4, 3, 1, "", "output_dir"], [4, 3, 1, "", "output_steps"], [4, 3, 1, "", "psfx"], [4, 3, 1, "", "psfy"], [4, 3, 1, "", "psfz"], [4, 3, 1, "", "rel_error"], [4, 3, 1, "", "sigma_th"], [4, 3, 1, "", "sigma_th_max"]], "pyapr.data_containers.ByteParticles": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "fill"], [4, 2, 1, "", "fill_with_levels"], [4, 2, 1, "", "max"], [4, 2, 1, "", "min"], [4, 2, 1, "", "resize"], [4, 2, 1, "", "sample_image"], [4, 2, 1, "", "sample_image_blocked"], [4, 2, 1, "", "set_background"], [4, 2, 1, "", "set_compression_type"], [4, 2, 1, "", "set_quantization_factor"]], "pyapr.data_containers.FloatParticles": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "fill"], [4, 2, 1, "", "fill_with_levels"], [4, 2, 1, "", "max"], [4, 2, 1, "", "min"], [4, 2, 1, "", "resize"], [4, 2, 1, "", "sample_image"], [4, 2, 1, "", "sample_image_blocked"], [4, 2, 1, "", "set_background"], [4, 2, 1, "", "set_compression_type"], [4, 2, 1, "", "set_quantization_factor"]], "pyapr.data_containers.IntParticles": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "fill"], [4, 2, 1, "", "fill_with_levels"], [4, 2, 1, "", "max"], [4, 2, 1, "", "min"], [4, 2, 1, "", "resize"], [4, 2, 1, "", "sample_image"], [4, 2, 1, "", "sample_image_blocked"], [4, 2, 1, "", "set_background"], [4, 2, 1, "", "set_compression_type"], [4, 2, 1, "", "set_quantization_factor"]], "pyapr.data_containers.LazyAccess": [[4, 2, 1, "", "close"], [4, 2, 1, "", "init"], [4, 2, 1, "", "init_tree"], [4, 2, 1, "", "open"], [4, 2, 1, "", "org_dims"]], "pyapr.data_containers.LazyDataByte": [[4, 2, 1, "", "close"], [4, 2, 1, "", "dataset_size"], [4, 2, 1, "", "init"], [4, 2, 1, "", "init_tree"], [4, 2, 1, "", "open"]], "pyapr.data_containers.LazyDataFloat": [[4, 2, 1, "", "close"], [4, 2, 1, "", "dataset_size"], [4, 2, 1, "", "init"], [4, 2, 1, "", "init_tree"], [4, 2, 1, "", "open"]], "pyapr.data_containers.LazyDataLong": [[4, 2, 1, "", "close"], [4, 2, 1, "", "dataset_size"], [4, 2, 1, "", "init"], [4, 2, 1, "", "init_tree"], [4, 2, 1, "", "open"]], "pyapr.data_containers.LazyDataShort": [[4, 2, 1, "", "close"], [4, 2, 1, "", "dataset_size"], [4, 2, 1, "", "init"], [4, 2, 1, "", "init_tree"], [4, 2, 1, "", "open"]], "pyapr.data_containers.LinearIterator": [[4, 2, 1, "", "begin"], [4, 2, 1, "", "end"], [4, 2, 1, "", "find_coordinates"], [4, 2, 1, "", "find_particle"], [4, 2, 1, "", "level_max"], [4, 2, 1, "", "level_min"], [4, 2, 1, "", "total_number_particles"], [4, 2, 1, "", "x_num"], [4, 2, 1, "", "y"], [4, 2, 1, "", "y_num"], [4, 2, 1, "", "z_num"]], "pyapr.data_containers.LongParticles": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "fill"], [4, 2, 1, "", "fill_with_levels"], [4, 2, 1, "", "max"], [4, 2, 1, "", "min"], [4, 2, 1, "", "resize"], [4, 2, 1, "", "sample_image"], [4, 2, 1, "", "sample_image_blocked"], [4, 2, 1, "", "set_background"], [4, 2, 1, "", "set_compression_type"], [4, 2, 1, "", "set_quantization_factor"]], "pyapr.data_containers.ReconPatch": [[4, 2, 1, "", "check_limits"], [4, 3, 1, "", "level_delta"], [4, 2, 1, "", "size"], [4, 3, 1, "", "x_begin"], [4, 3, 1, "", "x_end"], [4, 3, 1, "", "y_begin"], [4, 3, 1, "", "y_end"], [4, 3, 1, "", "z_begin"], [4, 3, 1, "", "z_end"]], "pyapr.data_containers.ShortParticles": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "fill"], [4, 2, 1, "", "fill_with_levels"], [4, 2, 1, "", "max"], [4, 2, 1, "", "min"], [4, 2, 1, "", "resize"], [4, 2, 1, "", "sample_image"], [4, 2, 1, "", "sample_image_blocked"], [4, 2, 1, "", "set_background"], [4, 2, 1, "", "set_compression_type"], [4, 2, 1, "", "set_quantization_factor"]], "pyapr.filter": [[5, 4, 1, "", "convolve"], [5, 4, 1, "", "correlate"], [5, 4, 1, "", "get_gaussian_stencil"], [5, 4, 1, "", "gradient"], [5, 4, 1, "", "gradient_magnitude"], [5, 4, 1, "", "max_filter"], [5, 4, 1, "", "median_filter"], [5, 4, 1, "", "min_filter"], [5, 4, 1, "", "sobel"], [5, 4, 1, "", "sobel_magnitude"], [5, 4, 1, "", "std"]], "pyapr.io": [[6, 1, 1, "", "APRFile"], [6, 4, 1, "", "get_particle_names"], [6, 4, 1, "", "get_particle_type"], [6, 4, 1, "", "read"], [6, 4, 1, "", "read_apr"], [6, 4, 1, "", "read_particles"], [6, 4, 1, "", "write"], [6, 4, 1, "", "write_apr"], [6, 4, 1, "", "write_particles"]], "pyapr.io.APRFile": [[6, 2, 1, "", "close"], [6, 2, 1, "", "current_file_size_GB"], [6, 2, 1, "", "current_file_size_MB"], [6, 2, 1, "", "get_channel_names"], [6, 2, 1, "", "get_particle_type"], [6, 2, 1, "", "get_particles_names"], [6, 2, 1, "", "open"], [6, 2, 1, "", "read_apr"], [6, 2, 1, "", "read_particles"], [6, 2, 1, "", "set_write_linear_flag"], [6, 2, 1, "", "write_apr"], [6, 2, 1, "", "write_particles"]], "pyapr.measure": [[7, 4, 1, "", "connected_component"], [7, 4, 1, "", "find_label_centers"], [7, 4, 1, "", "find_label_volume"], [7, 4, 1, "", "find_objects"]], "pyapr.morphology": [[8, 4, 1, "", "bottomhat"], [8, 4, 1, "", "closing"], [8, 4, 1, "", "dilation"], [8, 4, 1, "", "erosion"], [8, 4, 1, "", "find_perimeter"], [8, 4, 1, "", "opening"], [8, 4, 1, "", "remove_edge_objects"], [8, 4, 1, "", "remove_large_objects"], [8, 4, 1, "", "remove_small_holes"], [8, 4, 1, "", "remove_small_objects"], [8, 4, 1, "", "tophat"]], "pyapr.reconstruction": [[9, 1, 1, "", "APRSlicer"], [9, 1, 1, "", "LazySlicer"], [9, 4, 1, "", "reconstruct_constant"], [9, 4, 1, "", "reconstruct_constant_lazy"], [9, 4, 1, "", "reconstruct_lazy"], [9, 4, 1, "", "reconstruct_level"], [9, 4, 1, "", "reconstruct_level_lazy"], [9, 4, 1, "", "reconstruct_smooth"], [9, 4, 1, "", "reconstruct_smooth_lazy"]], "pyapr.reconstruction.APRSlicer": [[9, 2, 1, "", "astype"], [9, 3, 1, "", "ndim"], [9, 2, 1, "", "new_empty_slice"], [9, 2, 1, "", "reconstruct"], [9, 2, 1, "", "set_level_delta"], [9, 3, 1, "", "shape"], [9, 2, 1, "", "update_dims"]], "pyapr.reconstruction.LazySlicer": [[9, 3, 1, "", "ndim"], [9, 2, 1, "", "new_empty_slice"], [9, 2, 1, "", "reconstruct"], [9, 2, 1, "", "set_level_delta"], [9, 3, 1, "", "shape"], [9, 2, 1, "", "transpose"], [9, 2, 1, "", "update_dims"]], "pyapr.restoration": [[10, 4, 1, "", "richardson_lucy"], [10, 4, 1, "", "richardson_lucy_cuda"], [10, 4, 1, "", "richardson_lucy_tv"]], "pyapr.segmentation": [[11, 4, 1, "", "compute_terminal_costs"], [11, 4, 1, "", "graphcut"]], "pyapr.transform": [[12, 4, 1, "", "maximum_projection"]], "pyapr.tree": [[13, 4, 1, "", "fill_tree_max"], [13, 4, 1, "", "fill_tree_mean"], [13, 4, 1, "", "fill_tree_min"], [13, 4, 1, "", "sample_from_tree"]], "pyapr.utils": [[14, 1, 1, "", "InteractiveIO"], [14, 4, 1, "", "particles_to_type"], [14, 4, 1, "", "type_to_lazy_particles"], [14, 4, 1, "", "type_to_particles"]], "pyapr.utils.InteractiveIO": [[14, 2, 1, "", "find_parameters_interactive"], [14, 2, 1, "", "get_apr_file_name"], [14, 2, 1, "", "get_tiff_file_name"], [14, 2, 1, "", "interactive_apr"], [14, 2, 1, "", "save_apr_file_name"], [14, 2, 1, "", "save_tiff_file_name"]], "pyapr.viewer": [[15, 1, 1, "", "APRRaycaster"], [15, 4, 1, "", "interactive_compression"], [15, 4, 1, "", "particle_scatter_plot"], [15, 4, 1, "", "parts_viewer"], [15, 4, 1, "", "raycast_viewer"]], "pyapr.viewer.APRRaycaster": [[15, 2, 1, "", "get_radius"], [15, 2, 1, "", "get_view"], [15, 2, 1, "", "increment_angle"], [15, 2, 1, "", "increment_phi"], [15, 2, 1, "", "set_angle"], [15, 2, 1, "", "set_level_delta"], [15, 2, 1, "", "set_phi"], [15, 2, 1, "", "set_radius"], [15, 2, 1, "", "set_verbose"], [15, 2, 1, "", "set_z_anisotropy"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"document": 0, "pyapr": [0, 2], "usag": 0, "submodul": [0, 2], "indic": 0, "tabl": 0, "instal": 1, "via": 1, "pip": 1, "from": 1, "sourc": 1, "depend": 1, "linux": 1, "osx": 1, "note": 1, "window": 1, "user": 1, "build": 1, "cmake": 1, "option": 1, "openmp": 1, "support": 1, "convert": 3, "data_contain": 4, "filter": 5, "io": 6, "measur": 7, "morphologi": 8, "reconstruct": 9, "restor": 10, "segment": 11, "transform": 12, "tree": 13, "util": 14, "viewer": 15}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Documentation for pyapr": [[0, "documentation-for-pyapr"]], "Usage": [[0, null]], "Submodules": [[0, null], [2, null]], "Indices and tables": [[0, "indices-and-tables"]], "Installation": [[1, "installation"]], "Installing via pip": [[1, "installing-via-pip"]], "Installing from source": [[1, "installing-from-source"]], "Dependencies": [[1, "dependencies"]], "Installing dependencies on Linux": [[1, "installing-dependencies-on-linux"]], "Installing dependencies on OSX": [[1, "installing-dependencies-on-osx"]], "Note for windows users": [[1, "note-for-windows-users"]], "Building": [[1, "building"]], "CMake build options": [[1, "cmake-build-options"]], "OpenMP support on OSX": [[1, "openmp-support-on-osx"]], "pyapr": [[2, "module-pyapr"]], "converter": [[3, "converter"]], "data_containers": [[4, "data-containers"]], "filter": [[5, "filter"]], "io": [[6, "io"]], "measure": [[7, "measure"]], "morphology": [[8, "morphology"]], "reconstruction": [[9, "reconstruction"]], "restoration": [[10, "restoration"]], "segmentation": [[11, "segmentation"]], "transform": [[12, "transform"]], "tree": [[13, "tree"]], "utils": [[14, "utils"]], "viewer": [[15, "viewer"]]}, "indexentries": {"cuda_enabled() (in module pyapr)": [[2, "pyapr.cuda_enabled"]], "module": [[2, "module-pyapr"], [3, "module-pyapr.converter"], [4, "module-pyapr.data_containers"], [5, "module-pyapr.filter"], [6, "module-pyapr.io"], [7, "module-pyapr.measure"], [8, "module-pyapr.morphology"], [9, "module-pyapr.reconstruction"], [10, "module-pyapr.restoration"], [11, "module-pyapr.segmentation"], [12, "module-pyapr.transform"], [13, "module-pyapr.tree"], [14, "module-pyapr.utils"], [15, "module-pyapr.viewer"]], "pyapr": [[2, "module-pyapr"]], "byteconverter (class in pyapr.converter)": [[3, "pyapr.converter.ByteConverter"]], "byteconverterbatch (class in pyapr.converter)": [[3, "pyapr.converter.ByteConverterBatch"]], "floatconverter (class in pyapr.converter)": [[3, "pyapr.converter.FloatConverter"]], "floatconverterbatch (class in pyapr.converter)": [[3, "pyapr.converter.FloatConverterBatch"]], "shortconverter (class in pyapr.converter)": [[3, "pyapr.converter.ShortConverter"]], "shortconverterbatch (class in pyapr.converter)": [[3, "pyapr.converter.ShortConverterBatch"]], "find_parameters_interactive() (in module pyapr.converter)": [[3, "pyapr.converter.find_parameters_interactive"]], "get_apr() (in module pyapr.converter)": [[3, "pyapr.converter.get_apr"]], "get_apr() (pyapr.converter.byteconverter method)": [[3, "pyapr.converter.ByteConverter.get_apr"]], "get_apr() (pyapr.converter.byteconverterbatch method)": [[3, "pyapr.converter.ByteConverterBatch.get_apr"]], "get_apr() (pyapr.converter.floatconverter method)": [[3, "pyapr.converter.FloatConverter.get_apr"]], "get_apr() (pyapr.converter.floatconverterbatch method)": [[3, "pyapr.converter.FloatConverterBatch.get_apr"]], "get_apr() (pyapr.converter.shortconverter method)": [[3, "pyapr.converter.ShortConverter.get_apr"]], "get_apr() (pyapr.converter.shortconverterbatch method)": [[3, "pyapr.converter.ShortConverterBatch.get_apr"]], "get_apr_interactive() (in module pyapr.converter)": [[3, "pyapr.converter.get_apr_interactive"]], "get_apr_step1() (pyapr.converter.byteconverter method)": [[3, "pyapr.converter.ByteConverter.get_apr_step1"]], "get_apr_step1() (pyapr.converter.floatconverter method)": [[3, "pyapr.converter.FloatConverter.get_apr_step1"]], "get_apr_step1() (pyapr.converter.shortconverter method)": [[3, "pyapr.converter.ShortConverter.get_apr_step1"]], "get_apr_step2() (pyapr.converter.byteconverter method)": [[3, "pyapr.converter.ByteConverter.get_apr_step2"]], "get_apr_step2() (pyapr.converter.floatconverter method)": [[3, "pyapr.converter.FloatConverter.get_apr_step2"]], "get_apr_step2() (pyapr.converter.shortconverter method)": [[3, "pyapr.converter.ShortConverter.get_apr_step2"]], "get_level_slice() (pyapr.converter.byteconverter method)": [[3, "pyapr.converter.ByteConverter.get_level_slice"]], "get_level_slice() (pyapr.converter.floatconverter method)": [[3, "pyapr.converter.FloatConverter.get_level_slice"]], "get_level_slice() (pyapr.converter.shortconverter method)": [[3, "pyapr.converter.ShortConverter.get_level_slice"]], "get_parameters() (pyapr.converter.byteconverter method)": [[3, "pyapr.converter.ByteConverter.get_parameters"]], "get_parameters() (pyapr.converter.byteconverterbatch method)": [[3, "pyapr.converter.ByteConverterBatch.get_parameters"]], "get_parameters() (pyapr.converter.floatconverter method)": [[3, "pyapr.converter.FloatConverter.get_parameters"]], "get_parameters() (pyapr.converter.floatconverterbatch method)": [[3, "pyapr.converter.FloatConverterBatch.get_parameters"]], "get_parameters() (pyapr.converter.shortconverter method)": [[3, "pyapr.converter.ShortConverter.get_parameters"]], "get_parameters() (pyapr.converter.shortconverterbatch method)": [[3, "pyapr.converter.ShortConverterBatch.get_parameters"]], "pyapr.converter": [[3, "module-pyapr.converter"]], "set_parameters() (pyapr.converter.byteconverter method)": [[3, "pyapr.converter.ByteConverter.set_parameters"]], "set_parameters() (pyapr.converter.byteconverterbatch method)": [[3, "pyapr.converter.ByteConverterBatch.set_parameters"]], "set_parameters() (pyapr.converter.floatconverter method)": [[3, "pyapr.converter.FloatConverter.set_parameters"]], "set_parameters() (pyapr.converter.floatconverterbatch method)": [[3, "pyapr.converter.FloatConverterBatch.set_parameters"]], "set_parameters() (pyapr.converter.shortconverter method)": [[3, "pyapr.converter.ShortConverter.set_parameters"]], "set_parameters() (pyapr.converter.shortconverterbatch method)": [[3, "pyapr.converter.ShortConverterBatch.set_parameters"]], "verbose (pyapr.converter.byteconverter property)": [[3, "pyapr.converter.ByteConverter.verbose"]], "verbose (pyapr.converter.byteconverterbatch property)": [[3, "pyapr.converter.ByteConverterBatch.verbose"]], "verbose (pyapr.converter.floatconverter property)": [[3, "pyapr.converter.FloatConverter.verbose"]], "verbose (pyapr.converter.floatconverterbatch property)": [[3, "pyapr.converter.FloatConverterBatch.verbose"]], "verbose (pyapr.converter.shortconverter property)": [[3, "pyapr.converter.ShortConverter.verbose"]], "verbose (pyapr.converter.shortconverterbatch property)": [[3, "pyapr.converter.ShortConverterBatch.verbose"]], "z_block_size (pyapr.converter.byteconverterbatch property)": [[3, "pyapr.converter.ByteConverterBatch.z_block_size"]], "z_block_size (pyapr.converter.floatconverterbatch property)": [[3, "pyapr.converter.FloatConverterBatch.z_block_size"]], "z_block_size (pyapr.converter.shortconverterbatch property)": [[3, "pyapr.converter.ShortConverterBatch.z_block_size"]], "z_ghost_size (pyapr.converter.byteconverterbatch property)": [[3, "pyapr.converter.ByteConverterBatch.z_ghost_size"]], "z_ghost_size (pyapr.converter.floatconverterbatch property)": [[3, "pyapr.converter.FloatConverterBatch.z_ghost_size"]], "z_ghost_size (pyapr.converter.shortconverterbatch property)": [[3, "pyapr.converter.ShortConverterBatch.z_ghost_size"]], "apr (class in pyapr.data_containers)": [[4, "pyapr.data_containers.APR"]], "aprparameters (class in pyapr.data_containers)": [[4, "pyapr.data_containers.APRParameters"]], "byteparticles (class in pyapr.data_containers)": [[4, "pyapr.data_containers.ByteParticles"]], "floatparticles (class in pyapr.data_containers)": [[4, "pyapr.data_containers.FloatParticles"]], "intparticles (class in pyapr.data_containers)": [[4, "pyapr.data_containers.IntParticles"]], "ip_th (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.Ip_th"]], "lazyaccess (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LazyAccess"]], "lazydatabyte (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LazyDataByte"]], "lazydatafloat (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LazyDataFloat"]], "lazydatalong (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LazyDataLong"]], "lazydatashort (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LazyDataShort"]], "lazyiterator (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LazyIterator"]], "lineariterator (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LinearIterator"]], "longparticles (class in pyapr.data_containers)": [[4, "pyapr.data_containers.LongParticles"]], "reconpatch (class in pyapr.data_containers)": [[4, "pyapr.data_containers.ReconPatch"]], "shortparticles (class in pyapr.data_containers)": [[4, "pyapr.data_containers.ShortParticles"]], "auto_parameters (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.auto_parameters"]], "background_intensity_estimate (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.background_intensity_estimate"]], "begin() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.begin"]], "check_limits() (pyapr.data_containers.reconpatch method)": [[4, "pyapr.data_containers.ReconPatch.check_limits"]], "close() (pyapr.data_containers.lazyaccess method)": [[4, "pyapr.data_containers.LazyAccess.close"]], "close() (pyapr.data_containers.lazydatabyte method)": [[4, "pyapr.data_containers.LazyDataByte.close"]], "close() (pyapr.data_containers.lazydatafloat method)": [[4, "pyapr.data_containers.LazyDataFloat.close"]], "close() (pyapr.data_containers.lazydatalong method)": [[4, "pyapr.data_containers.LazyDataLong.close"]], "close() (pyapr.data_containers.lazydatashort method)": [[4, "pyapr.data_containers.LazyDataShort.close"]], "computational_ratio() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.computational_ratio"]], "copy() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.copy"]], "copy() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.copy"]], "copy() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.copy"]], "copy() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.copy"]], "copy() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.copy"]], "dataset_size() (pyapr.data_containers.lazydatabyte method)": [[4, "pyapr.data_containers.LazyDataByte.dataset_size"]], "dataset_size() (pyapr.data_containers.lazydatafloat method)": [[4, "pyapr.data_containers.LazyDataFloat.dataset_size"]], "dataset_size() (pyapr.data_containers.lazydatalong method)": [[4, "pyapr.data_containers.LazyDataLong.dataset_size"]], "dataset_size() (pyapr.data_containers.lazydatashort method)": [[4, "pyapr.data_containers.LazyDataShort.dataset_size"]], "dx (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.dx"]], "dy (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.dy"]], "dz (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.dz"]], "end() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.end"]], "fill() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.fill"]], "fill() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.fill"]], "fill() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.fill"]], "fill() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.fill"]], "fill() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.fill"]], "fill_with_levels() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.fill_with_levels"]], "fill_with_levels() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.fill_with_levels"]], "fill_with_levels() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.fill_with_levels"]], "fill_with_levels() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.fill_with_levels"]], "fill_with_levels() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.fill_with_levels"]], "find_coordinates() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.find_coordinates"]], "find_particle() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.find_particle"]], "get_parameters() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.get_parameters"]], "grad_th (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.grad_th"]], "gradient_smoothing (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.gradient_smoothing"]], "init() (pyapr.data_containers.lazyaccess method)": [[4, "pyapr.data_containers.LazyAccess.init"]], "init() (pyapr.data_containers.lazydatabyte method)": [[4, "pyapr.data_containers.LazyDataByte.init"]], "init() (pyapr.data_containers.lazydatafloat method)": [[4, "pyapr.data_containers.LazyDataFloat.init"]], "init() (pyapr.data_containers.lazydatalong method)": [[4, "pyapr.data_containers.LazyDataLong.init"]], "init() (pyapr.data_containers.lazydatashort method)": [[4, "pyapr.data_containers.LazyDataShort.init"]], "init_tree() (pyapr.data_containers.lazyaccess method)": [[4, "pyapr.data_containers.LazyAccess.init_tree"]], "init_tree() (pyapr.data_containers.lazydatabyte method)": [[4, "pyapr.data_containers.LazyDataByte.init_tree"]], "init_tree() (pyapr.data_containers.lazydatafloat method)": [[4, "pyapr.data_containers.LazyDataFloat.init_tree"]], "init_tree() (pyapr.data_containers.lazydatalong method)": [[4, "pyapr.data_containers.LazyDataLong.init_tree"]], "init_tree() (pyapr.data_containers.lazydatashort method)": [[4, "pyapr.data_containers.LazyDataShort.init_tree"]], "input_dir (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.input_dir"]], "input_image_name (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.input_image_name"]], "iterator() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.iterator"]], "level_delta (pyapr.data_containers.reconpatch property)": [[4, "pyapr.data_containers.ReconPatch.level_delta"]], "level_max() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.level_max"]], "level_max() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.level_max"]], "level_min() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.level_min"]], "level_min() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.level_min"]], "mask_file (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.mask_file"]], "max() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.max"]], "max() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.max"]], "max() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.max"]], "max() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.max"]], "max() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.max"]], "min() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.min"]], "min() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.min"]], "min() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.min"]], "min() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.min"]], "min() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.min"]], "name (pyapr.data_containers.apr property)": [[4, "pyapr.data_containers.APR.name"]], "name (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.name"]], "neighborhood_optimization (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.neighborhood_optimization"]], "noise_sd_estimate (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.noise_sd_estimate"]], "open() (pyapr.data_containers.lazyaccess method)": [[4, "pyapr.data_containers.LazyAccess.open"]], "open() (pyapr.data_containers.lazydatabyte method)": [[4, "pyapr.data_containers.LazyDataByte.open"]], "open() (pyapr.data_containers.lazydatafloat method)": [[4, "pyapr.data_containers.LazyDataFloat.open"]], "open() (pyapr.data_containers.lazydatalong method)": [[4, "pyapr.data_containers.LazyDataLong.open"]], "open() (pyapr.data_containers.lazydatashort method)": [[4, "pyapr.data_containers.LazyDataShort.open"]], "org_dims() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.org_dims"]], "org_dims() (pyapr.data_containers.lazyaccess method)": [[4, "pyapr.data_containers.LazyAccess.org_dims"]], "output_dir (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.output_dir"]], "output_steps (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.output_steps"]], "psfx (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.psfx"]], "psfy (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.psfy"]], "psfz (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.psfz"]], "pyapr.data_containers": [[4, "module-pyapr.data_containers"]], "rel_error (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.rel_error"]], "resize() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.resize"]], "resize() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.resize"]], "resize() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.resize"]], "resize() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.resize"]], "resize() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.resize"]], "sample_image() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.sample_image"]], "sample_image() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.sample_image"]], "sample_image() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.sample_image"]], "sample_image() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.sample_image"]], "sample_image() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.sample_image"]], "sample_image_blocked() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.sample_image_blocked"]], "sample_image_blocked() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.sample_image_blocked"]], "sample_image_blocked() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.sample_image_blocked"]], "sample_image_blocked() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.sample_image_blocked"]], "sample_image_blocked() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.sample_image_blocked"]], "set_background() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.set_background"]], "set_background() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.set_background"]], "set_background() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.set_background"]], "set_background() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.set_background"]], "set_background() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.set_background"]], "set_compression_type() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.set_compression_type"]], "set_compression_type() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.set_compression_type"]], "set_compression_type() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.set_compression_type"]], "set_compression_type() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.set_compression_type"]], "set_compression_type() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.set_compression_type"]], "set_quantization_factor() (pyapr.data_containers.byteparticles method)": [[4, "pyapr.data_containers.ByteParticles.set_quantization_factor"]], "set_quantization_factor() (pyapr.data_containers.floatparticles method)": [[4, "pyapr.data_containers.FloatParticles.set_quantization_factor"]], "set_quantization_factor() (pyapr.data_containers.intparticles method)": [[4, "pyapr.data_containers.IntParticles.set_quantization_factor"]], "set_quantization_factor() (pyapr.data_containers.longparticles method)": [[4, "pyapr.data_containers.LongParticles.set_quantization_factor"]], "set_quantization_factor() (pyapr.data_containers.shortparticles method)": [[4, "pyapr.data_containers.ShortParticles.set_quantization_factor"]], "shape() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.shape"]], "sigma_th (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.sigma_th"]], "sigma_th_max (pyapr.data_containers.aprparameters property)": [[4, "pyapr.data_containers.APRParameters.sigma_th_max"]], "size() (pyapr.data_containers.reconpatch method)": [[4, "pyapr.data_containers.ReconPatch.size"]], "total_number_particles() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.total_number_particles"]], "total_number_particles() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.total_number_particles"]], "total_number_tree_particles() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.total_number_tree_particles"]], "tree_iterator() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.tree_iterator"]], "x_begin (pyapr.data_containers.reconpatch property)": [[4, "pyapr.data_containers.ReconPatch.x_begin"]], "x_end (pyapr.data_containers.reconpatch property)": [[4, "pyapr.data_containers.ReconPatch.x_end"]], "x_num() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.x_num"]], "x_num() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.x_num"]], "y() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.y"]], "y_begin (pyapr.data_containers.reconpatch property)": [[4, "pyapr.data_containers.ReconPatch.y_begin"]], "y_end (pyapr.data_containers.reconpatch property)": [[4, "pyapr.data_containers.ReconPatch.y_end"]], "y_num() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.y_num"]], "y_num() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.y_num"]], "z_begin (pyapr.data_containers.reconpatch property)": [[4, "pyapr.data_containers.ReconPatch.z_begin"]], "z_end (pyapr.data_containers.reconpatch property)": [[4, "pyapr.data_containers.ReconPatch.z_end"]], "z_num() (pyapr.data_containers.apr method)": [[4, "pyapr.data_containers.APR.z_num"]], "z_num() (pyapr.data_containers.lineariterator method)": [[4, "pyapr.data_containers.LinearIterator.z_num"]], "convolve() (in module pyapr.filter)": [[5, "pyapr.filter.convolve"]], "correlate() (in module pyapr.filter)": [[5, "pyapr.filter.correlate"]], "get_gaussian_stencil() (in module pyapr.filter)": [[5, "pyapr.filter.get_gaussian_stencil"]], "gradient() (in module pyapr.filter)": [[5, "pyapr.filter.gradient"]], "gradient_magnitude() (in module pyapr.filter)": [[5, "pyapr.filter.gradient_magnitude"]], "max_filter() (in module pyapr.filter)": [[5, "pyapr.filter.max_filter"]], "median_filter() (in module pyapr.filter)": [[5, "pyapr.filter.median_filter"]], "min_filter() (in module pyapr.filter)": [[5, "pyapr.filter.min_filter"]], "pyapr.filter": [[5, "module-pyapr.filter"]], "sobel() (in module pyapr.filter)": [[5, "pyapr.filter.sobel"]], "sobel_magnitude() (in module pyapr.filter)": [[5, "pyapr.filter.sobel_magnitude"]], "std() (in module pyapr.filter)": [[5, "pyapr.filter.std"]], "aprfile (class in pyapr.io)": [[6, "pyapr.io.APRFile"]], "close() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.close"]], "current_file_size_gb() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.current_file_size_GB"]], "current_file_size_mb() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.current_file_size_MB"]], "get_channel_names() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.get_channel_names"]], "get_particle_names() (in module pyapr.io)": [[6, "pyapr.io.get_particle_names"]], "get_particle_type() (in module pyapr.io)": [[6, "pyapr.io.get_particle_type"]], "get_particle_type() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.get_particle_type"]], "get_particles_names() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.get_particles_names"]], "open() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.open"]], "pyapr.io": [[6, "module-pyapr.io"]], "read() (in module pyapr.io)": [[6, "pyapr.io.read"]], "read_apr() (in module pyapr.io)": [[6, "pyapr.io.read_apr"]], "read_apr() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.read_apr"]], "read_particles() (in module pyapr.io)": [[6, "pyapr.io.read_particles"]], "read_particles() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.read_particles"]], "set_write_linear_flag() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.set_write_linear_flag"]], "write() (in module pyapr.io)": [[6, "pyapr.io.write"]], "write_apr() (in module pyapr.io)": [[6, "pyapr.io.write_apr"]], "write_apr() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.write_apr"]], "write_particles() (in module pyapr.io)": [[6, "pyapr.io.write_particles"]], "write_particles() (pyapr.io.aprfile method)": [[6, "pyapr.io.APRFile.write_particles"]], "connected_component() (in module pyapr.measure)": [[7, "pyapr.measure.connected_component"]], "find_label_centers() (in module pyapr.measure)": [[7, "pyapr.measure.find_label_centers"]], "find_label_volume() (in module pyapr.measure)": [[7, "pyapr.measure.find_label_volume"]], "find_objects() (in module pyapr.measure)": [[7, "pyapr.measure.find_objects"]], "pyapr.measure": [[7, "module-pyapr.measure"]], "bottomhat() (in module pyapr.morphology)": [[8, "pyapr.morphology.bottomhat"]], "closing() (in module pyapr.morphology)": [[8, "pyapr.morphology.closing"]], "dilation() (in module pyapr.morphology)": [[8, "pyapr.morphology.dilation"]], "erosion() (in module pyapr.morphology)": [[8, "pyapr.morphology.erosion"]], "find_perimeter() (in module pyapr.morphology)": [[8, "pyapr.morphology.find_perimeter"]], "opening() (in module pyapr.morphology)": [[8, "pyapr.morphology.opening"]], "pyapr.morphology": [[8, "module-pyapr.morphology"]], "remove_edge_objects() (in module pyapr.morphology)": [[8, "pyapr.morphology.remove_edge_objects"]], "remove_large_objects() (in module pyapr.morphology)": [[8, "pyapr.morphology.remove_large_objects"]], "remove_small_holes() (in module pyapr.morphology)": [[8, "pyapr.morphology.remove_small_holes"]], "remove_small_objects() (in module pyapr.morphology)": [[8, "pyapr.morphology.remove_small_objects"]], "tophat() (in module pyapr.morphology)": [[8, "pyapr.morphology.tophat"]], "aprslicer (class in pyapr.reconstruction)": [[9, "pyapr.reconstruction.APRSlicer"]], "lazyslicer (class in pyapr.reconstruction)": [[9, "pyapr.reconstruction.LazySlicer"]], "astype() (pyapr.reconstruction.aprslicer method)": [[9, "pyapr.reconstruction.APRSlicer.astype"]], "ndim (pyapr.reconstruction.aprslicer property)": [[9, "pyapr.reconstruction.APRSlicer.ndim"]], "ndim (pyapr.reconstruction.lazyslicer property)": [[9, "pyapr.reconstruction.LazySlicer.ndim"]], "new_empty_slice() (pyapr.reconstruction.aprslicer method)": [[9, "pyapr.reconstruction.APRSlicer.new_empty_slice"]], "new_empty_slice() (pyapr.reconstruction.lazyslicer method)": [[9, "pyapr.reconstruction.LazySlicer.new_empty_slice"]], "pyapr.reconstruction": [[9, "module-pyapr.reconstruction"]], "reconstruct() (pyapr.reconstruction.aprslicer method)": [[9, "pyapr.reconstruction.APRSlicer.reconstruct"]], "reconstruct() (pyapr.reconstruction.lazyslicer method)": [[9, "pyapr.reconstruction.LazySlicer.reconstruct"]], "reconstruct_constant() (in module pyapr.reconstruction)": [[9, "pyapr.reconstruction.reconstruct_constant"]], "reconstruct_constant_lazy() (in module pyapr.reconstruction)": [[9, "pyapr.reconstruction.reconstruct_constant_lazy"]], "reconstruct_lazy() (in module pyapr.reconstruction)": [[9, "pyapr.reconstruction.reconstruct_lazy"]], "reconstruct_level() (in module pyapr.reconstruction)": [[9, "pyapr.reconstruction.reconstruct_level"]], "reconstruct_level_lazy() (in module pyapr.reconstruction)": [[9, "pyapr.reconstruction.reconstruct_level_lazy"]], "reconstruct_smooth() (in module pyapr.reconstruction)": [[9, "pyapr.reconstruction.reconstruct_smooth"]], "reconstruct_smooth_lazy() (in module pyapr.reconstruction)": [[9, "pyapr.reconstruction.reconstruct_smooth_lazy"]], "set_level_delta() (pyapr.reconstruction.aprslicer method)": [[9, "pyapr.reconstruction.APRSlicer.set_level_delta"]], "set_level_delta() (pyapr.reconstruction.lazyslicer method)": [[9, "pyapr.reconstruction.LazySlicer.set_level_delta"]], "shape (pyapr.reconstruction.aprslicer property)": [[9, "pyapr.reconstruction.APRSlicer.shape"]], "shape (pyapr.reconstruction.lazyslicer property)": [[9, "pyapr.reconstruction.LazySlicer.shape"]], "transpose() (pyapr.reconstruction.lazyslicer method)": [[9, "pyapr.reconstruction.LazySlicer.transpose"]], "update_dims() (pyapr.reconstruction.aprslicer method)": [[9, "pyapr.reconstruction.APRSlicer.update_dims"]], "update_dims() (pyapr.reconstruction.lazyslicer method)": [[9, "pyapr.reconstruction.LazySlicer.update_dims"]], "pyapr.restoration": [[10, "module-pyapr.restoration"]], "richardson_lucy() (in module pyapr.restoration)": [[10, "pyapr.restoration.richardson_lucy"]], "richardson_lucy_cuda() (in module pyapr.restoration)": [[10, "pyapr.restoration.richardson_lucy_cuda"]], "richardson_lucy_tv() (in module pyapr.restoration)": [[10, "pyapr.restoration.richardson_lucy_tv"]], "compute_terminal_costs() (in module pyapr.segmentation)": [[11, "pyapr.segmentation.compute_terminal_costs"]], "graphcut() (in module pyapr.segmentation)": [[11, "pyapr.segmentation.graphcut"]], "pyapr.segmentation": [[11, "module-pyapr.segmentation"]], "maximum_projection() (in module pyapr.transform)": [[12, "pyapr.transform.maximum_projection"]], "pyapr.transform": [[12, "module-pyapr.transform"]], "fill_tree_max() (in module pyapr.tree)": [[13, "pyapr.tree.fill_tree_max"]], "fill_tree_mean() (in module pyapr.tree)": [[13, "pyapr.tree.fill_tree_mean"]], "fill_tree_min() (in module pyapr.tree)": [[13, "pyapr.tree.fill_tree_min"]], "pyapr.tree": [[13, "module-pyapr.tree"]], "sample_from_tree() (in module pyapr.tree)": [[13, "pyapr.tree.sample_from_tree"]], "interactiveio (class in pyapr.utils)": [[14, "pyapr.utils.InteractiveIO"]], "find_parameters_interactive() (pyapr.utils.interactiveio method)": [[14, "pyapr.utils.InteractiveIO.find_parameters_interactive"]], "get_apr_file_name() (pyapr.utils.interactiveio static method)": [[14, "pyapr.utils.InteractiveIO.get_apr_file_name"]], "get_tiff_file_name() (pyapr.utils.interactiveio static method)": [[14, "pyapr.utils.InteractiveIO.get_tiff_file_name"]], "interactive_apr() (pyapr.utils.interactiveio method)": [[14, "pyapr.utils.InteractiveIO.interactive_apr"]], "particles_to_type() (in module pyapr.utils)": [[14, "pyapr.utils.particles_to_type"]], "pyapr.utils": [[14, "module-pyapr.utils"]], "save_apr_file_name() (pyapr.utils.interactiveio static method)": [[14, "pyapr.utils.InteractiveIO.save_apr_file_name"]], "save_tiff_file_name() (pyapr.utils.interactiveio static method)": [[14, "pyapr.utils.InteractiveIO.save_tiff_file_name"]], "type_to_lazy_particles() (in module pyapr.utils)": [[14, "pyapr.utils.type_to_lazy_particles"]], "type_to_particles() (in module pyapr.utils)": [[14, "pyapr.utils.type_to_particles"]], "aprraycaster (class in pyapr.viewer)": [[15, "pyapr.viewer.APRRaycaster"]], "get_radius() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.get_radius"]], "get_view() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.get_view"]], "increment_angle() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.increment_angle"]], "increment_phi() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.increment_phi"]], "interactive_compression() (in module pyapr.viewer)": [[15, "pyapr.viewer.interactive_compression"]], "particle_scatter_plot() (in module pyapr.viewer)": [[15, "pyapr.viewer.particle_scatter_plot"]], "parts_viewer() (in module pyapr.viewer)": [[15, "pyapr.viewer.parts_viewer"]], "pyapr.viewer": [[15, "module-pyapr.viewer"]], "raycast_viewer() (in module pyapr.viewer)": [[15, "pyapr.viewer.raycast_viewer"]], "set_angle() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.set_angle"]], "set_level_delta() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.set_level_delta"]], "set_phi() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.set_phi"]], "set_radius() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.set_radius"]], "set_verbose() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.set_verbose"]], "set_z_anisotropy() (pyapr.viewer.aprraycaster method)": [[15, "pyapr.viewer.APRRaycaster.set_z_anisotropy"]]}})